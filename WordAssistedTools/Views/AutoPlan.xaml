<Window
  x:Class="WordAssistedTools.Views.AutoPlan"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:WordAssistedTools.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:WordAssistedTools.Models"
  xmlns:vm="clr-namespace:WordAssistedTools.ViewModels"
  Name="PlanWindow"
  Title="自动规划"
  Width="900"
  Height="600"
  MinWidth="900"
  MinHeight="600"
  d:DataContext="{d:DesignInstance vm:AutoPlanViewModel,
                                   IsDesignTimeCreatable=True}"
  mc:Ignorable="d">
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Loaded">
      <i:InvokeCommandAction Command="{Binding LoadWindowCommand}" />
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Window.Resources>
    <local:DoubleSecondsToTimeStrConverter x:Key="DoubleSecondsToTimeStrConverter" />
    <local:TrimStringEndConverter x:Key="TrimStringEndConverter" />
    <Style x:Key="WrapTextStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style TargetType="DataGridColumnHeader">
      <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="TextAlignmentStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="ComboBox">
      <Setter Property="Width" Value="80" />
      <Setter Property="Margin" Value="1" />
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Width" Value="80" />
      <Setter Property="Margin" Value="1" />
    </Style>
    <Style TargetType="Button">
      <Setter Property="Height" Value="25" />
      <Setter Property="Width" Value="90" />
      <Setter Property="Margin" Value="1" />
    </Style>
  </Window.Resources>
  <Grid Margin="5">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <GroupBox Grid.Row="0" Header="参数设置">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Label
          Grid.Row="0"
          Grid.Column="0"
          Content="表中统计总字数" />
        <Label
          Grid.Row="0"
          Grid.Column="1"
          Content="{Binding TotalWordsCount}" />
        <Label
          Grid.Row="1"
          Grid.Column="0"
          Content="统计总段落数" />
        <Label
          Grid.Row="1"
          Grid.Column="1"
          Width="50"
          Content="{Binding AllParagraphCount}" />
        <Label
          Grid.Row="0"
          Grid.Column="4"
          Content="限制总时间(分钟)" />
        <ComboBox
          Grid.Row="0"
          Grid.Column="5"
          IsEditable="True"
          ItemsSource="{x:Static model:Consts.UpperLimitTimes}"
          Text="{Binding SelectedUpperLimitTime}" />
        <Label
          Grid.Row="1"
          Grid.Column="4"
          Content="时间余量(秒)" />
        <ComboBox
          Grid.Row="1"
          Grid.Column="5"
          IsEditable="True"
          ItemsSource="{x:Static model:Consts.FinalReservedTimes}"
          Text="{Binding SelectedFinalReservedTime}" />
        <Label
          Grid.Row="2"
          Grid.Column="4"
          Content="实际总时间" />
        <TextBox
          Grid.Row="2"
          Grid.Column="5"
          Height="25"
          Margin="1,0,1,1"
          VerticalAlignment="Bottom"
          IsReadOnly="True"
          Text="{Binding RealTotalTime, Converter={StaticResource DoubleSecondsToTimeStrConverter}}" />
        <GridSplitter
          Grid.Row="0"
          Grid.RowSpan="3"
          Grid.Column="6"
          Width="3"
          Margin="5,0"
          HorizontalAlignment="Center" />
        <Label
          Grid.Row="0"
          Grid.Column="7"
          Content="切片时间(秒)" />
        <ComboBox
          Grid.Row="0"
          Grid.Column="8"
          IsEditable="True"
          ItemsSource="{x:Static model:Consts.ChangeSlideTimes}"
          Text="{Binding SelectedChangeSlideTime}" />
        <Label
          Grid.Row="1"
          Grid.Column="7"
          Content="估计语速(字/分钟)" />
        <TextBox
          Grid.Row="1"
          Grid.Column="8"
          IsReadOnly="True"
          Text="{Binding EstimatedSpeechSpeed, StringFormat=f2}" />
        <Label
          Grid.Row="2"
          Grid.Column="7"
          Grid.ColumnSpan="2"
          Content="{Binding SpeechSpeedComment}"
          ContentStringFormat="评价：{0}" />
        <GridSplitter
          Grid.Row="0"
          Grid.RowSpan="3"
          Grid.Column="9"
          Width="3"
          Margin="5,0"
          HorizontalAlignment="Center" />
        <Button
          Grid.Row="0"
          Grid.Column="10"
          Command="{Binding SaveAsDefaultSettingsCommand}"
          Content="保存为默认" />
        <Button
          Grid.Row="1"
          Grid.Column="10"
          Command="{Binding RestoreEstimateParaWordCountCommand}"
          Content="恢复估计字数" />
        <Button
          Name="ButtonRefreshPlanningResults"
          Grid.Row="2"
          Grid.Column="10"
          Command="{Binding RefreshPlanningResultsCommand}"
          Content="时间规划" />
      </Grid>
    </GroupBox>
    <GroupBox Grid.Row="1" Header="当前方案">
      <local:CustomDataGrid
        Margin="2,5"
        AutoGenerateColumns="False"
        CanUserAddRows="False"
        CanUserDeleteRows="False"
        CanUserReorderColumns="False"
        CanUserResizeColumns="False"
        CanUserResizeRows="False"
        CanUserSortColumns="False"
        HorizontalGridLinesBrush="LightGray"
        ItemsSource="{Binding ParagraphInfoTable}"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        SelectedItemsList="{Binding SelectedParagraphs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        SelectionMode="Extended"
        VerticalGridLinesBrush="LightGray">
        <DataGrid.Columns>
          <DataGridTextColumn
            Width="25"
            Binding="{Binding Id}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="20"
            Binding="{Binding OriginWordParaId}"
            IsReadOnly="True"
            Visibility="Hidden" />
          <DataGridTextColumn
            Width="*"
            Binding="{Binding Text, Converter={StaticResource TrimStringEndConverter}}"
            ElementStyle="{StaticResource WrapTextStyle}"
            Header="段落内容"
            IsReadOnly="True" />
          <DataGridTemplateColumn
            Width="40"
            CanUserReorder="False"
            CanUserResize="False"
            CanUserSort="False"
            Header="计入">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <CheckBox
                  Margin="0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTextColumn
            Width="70"
            Binding="{Binding RealParaWordCount}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="段落字数"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="70"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="估计字数">
            <DataGridTextColumn.Binding>
              <Binding
                Mode="TwoWay"
                NotifyOnTargetUpdated="True"
                NotifyOnValidationError="True"
                Path="EstimateParaWordCount"
                UpdateSourceTrigger="PropertyChanged"
                ValidatesOnDataErrors="True">
                <Binding.ValidationRules>
                  <local:EstimateParaWordCountValidationRule />
                </Binding.ValidationRules>
              </Binding>
            </DataGridTextColumn.Binding>
            <DataGridTextColumn.EditingElementStyle>
              <Style TargetType="{x:Type TextBox}">
                <Setter Property="MaxLength" Value="8" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
              </Style>
            </DataGridTextColumn.EditingElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn
            Width="80"
            Binding="{Binding OldOnlyParaSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="旧-仅当前段"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="60"
            Binding="{Binding OldStartToParaStartSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="自开头"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="70"
            Binding="{Binding OldStartToParaEndSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="至当前段尾"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="80"
            Binding="{Binding NewOnlyParaSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="新-仅当前段"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="60"
            Binding="{Binding NewStartToParaStartSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="自开头"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="70"
            Binding="{Binding NewStartToParaEndSeconds, Converter={StaticResource DoubleSecondsToTimeStrConverter}}"
            ElementStyle="{StaticResource TextAlignmentStyle}"
            Header="至当前段尾"
            IsReadOnly="True" />
          <DataGridTextColumn
            Width="10"
            Binding="{Binding ValidState}"
            Header="数据正确"
            IsReadOnly="True"
            Visibility="Hidden" />
        </DataGrid.Columns>
        <DataGrid.ContextMenu>
          <ContextMenu>
            <MenuItem Command="{Binding TableMenuSetCheckedCommand}" Header="计入段落" />
            <MenuItem Command="{Binding TableMenuSetUncheckedCommand}" Header="取消计入段落" />
          </ContextMenu>
        </DataGrid.ContextMenu>
        <DataGrid.RowStyle>
          <Style TargetType="DataGridRow">
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
          </Style>
        </DataGrid.RowStyle>
        <DataGrid.CellStyle>
          <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                  <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#318EFD" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              </Trigger>
              <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="true" />
                  <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#318EFD" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
              </MultiTrigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </DataGrid.CellStyle>
      </local:CustomDataGrid>
    </GroupBox>
    <StackPanel
      Grid.Row="2"
      Margin="8,5"
      FlowDirection="RightToLeft"
      Orientation="Horizontal">
      <Button
        x:Name="ButtonUpdateWordDocument"
        Command="{Binding UpdateWordDocumentCommand}"
        CommandParameter="{Binding ElementName=PlanWindow}"
        Content="更新文档" />
      <Button Margin="10,0" Content="取消">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="Click">
            <i:CallMethodAction MethodName="Close" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </Button>
    </StackPanel>
  </Grid>
</Window>
