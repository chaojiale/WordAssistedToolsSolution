<Window
  x:Class="WordAssistedTools.Views.ExportToPpt"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:diffplex="clr-namespace:DiffPlex.Wpf.Controls;assembly=DiffPlex.Wpf"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:WordAssistedTools.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:WordAssistedTools.Models"
  xmlns:vm="clr-namespace:WordAssistedTools.ViewModels"
  Name="ExportWindow"
  Title="导出至PPT"
  Width="1000"
  Height="600"
  MinWidth="1000"
  MinHeight="600"
  d:DataContext="{d:DesignInstance vm:ExportToPptViewModel,
                                   IsDesignTimeCreatable=True}"
  mc:Ignorable="d">
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Loaded">
      <i:InvokeCommandAction Command="{Binding LoadWindowCommand}" />
    </i:EventTrigger>
    <i:EventTrigger EventName="Closing">
      <i:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Window.Resources>
    <local:AutoWrapConverter x:Key="AutoWrapConverter" />
    <local:TrimStringEndConverter x:Key="TrimStringEndConverter" />
    <local:ComparisonConverter x:Key="ComparisonConverter" />
    <Style x:Key="WrapTextStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style TargetType="DataGridColumnHeader">
      <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="TextAlignmentStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Margin" Value="1" />
    </Style>
    <Style TargetType="Button">
      <Setter Property="Height" Value="25" />
      <Setter Property="Width" Value="90" />
      <Setter Property="Margin" Value="1" />
    </Style>
  </Window.Resources>
  <Grid Margin="5">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <GroupBox Header="导出信息">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Label
          Grid.Row="0"
          Grid.Column="0"
          Content="PPT路径" />
        <TextBox
          Grid.Row="0"
          Grid.Column="1"
          Margin="5,0"
          Text="{Binding ExportPptPath}" />
        <Button
          Grid.Row="0"
          Grid.Column="2"
          Command="{Binding BrowsePptPathCommand}"
          Content="浏览" />
        <CheckBox
          Grid.Row="1"
          Grid.Column="1"
          Margin="1,5,10,1"
          HorizontalAlignment="Right"
          VerticalContentAlignment="Center"
          Content="浏览后自动加载"
          IsChecked="{Binding IsAutoLoadPptAfterBrowseChecked}" />
        <Button
          Grid.Row="1"
          Grid.Column="2"
          Margin="1,5,1,1"
          Command="{Binding LoadPptCommand}"
          Content="加载备注" />
      </Grid>
    </GroupBox>
    <GroupBox Grid.Row="1" Header="信息比较">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="400" />
          </Grid.ColumnDefinitions>
          <local:CustomDataGrid
            Margin="2,5"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserResizeColumns="False"
            CanUserResizeRows="False"
            CanUserSortColumns="False"
            HorizontalGridLinesBrush="LightGray"
            ItemsSource="{Binding WordPptCompareTable}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedItemsList="{Binding SelectedCompares, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionMode="Extended"
            VerticalGridLinesBrush="LightGray">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="SelectionChanged">
                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
              <DataGridTextColumn
                Width="25"
                Binding="{Binding Id}"
                ElementStyle="{StaticResource TextAlignmentStyle}"
                IsReadOnly="True" />
              <DataGridTemplateColumn
                Width="40"
                CanUserReorder="False"
                CanUserResize="False"
                CanUserSort="False"
                Header="计入">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <CheckBox
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn
                Width="70"
                Binding="{Binding WordTime}"
                ElementStyle="{StaticResource TextAlignmentStyle}"
                Header="时间"
                IsReadOnly="True" />
              <DataGridTextColumn
                Width="*"
                Binding="{Binding WordText, Converter={StaticResource TrimStringEndConverter}}"
                ElementStyle="{StaticResource WrapTextStyle}"
                Header="Word文档内容"
                IsReadOnly="True" />
              <DataGridTextColumn
                Width="70"
                Binding="{Binding PptTime}"
                ElementStyle="{StaticResource TextAlignmentStyle}"
                Header="时间"
                IsReadOnly="True" />
              <DataGridTextColumn
                Width="*"
                Binding="{Binding PptText, Converter={StaticResource TrimStringEndConverter}}"
                ElementStyle="{StaticResource WrapTextStyle}"
                Header="PPT备注内容"
                IsReadOnly="True" />
              <DataGridTextColumn
                Width="10"
                Binding="{Binding IsShowDiffer}"
                Header="是否相同"
                IsReadOnly="True"
                Visibility="Hidden" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
              <ContextMenu>
                <MenuItem Command="{Binding TableMenuSetCheckedCommand}" Header="计入条目" />
                <MenuItem Command="{Binding TableMenuSetUncheckedCommand}" Header="取消计入条目" />
              </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
              <Style TargetType="DataGridRow">
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
              </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                      <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      </Border>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <!--<DataTrigger Binding="{Binding IsShowDiffer}" Value="False">
                  <Setter Property="Background" Value="#E8F5E9" />
                </DataTrigger>-->
                  <DataTrigger Binding="{Binding IsShowDiffer}" Value="True">
                    <Setter Property="Background" Value="#FFEBEE" />
                  </DataTrigger>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#318EFD" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsSelected" Value="true" />
                      <Condition Property="Selector.IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#318EFD" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </DataGrid.CellStyle>
          </local:CustomDataGrid>
          <diffplex:DiffViewer
            x:Name="DiffView"
            Grid.Column="1"
            Margin="2,5,0,5"
            BorderBrush="LightGray"
            BorderThickness="2"
            NewText="{Binding CompareViewPptText, Converter={StaticResource AutoWrapConverter}}"
            OldText="{Binding CompareViewWordText, Converter={StaticResource AutoWrapConverter}}" />
        </Grid>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
          <CheckBox
            Margin="5"
            Command="{Binding SelectAllComparesCommand}"
            Content="全选"
            IsChecked="{Binding IsSelectAllItemsChecked}" />
          <CheckBox
            Margin="5"
            Command="{Binding ShowDifferenceCommand}"
            Content="显示差异"
            IsChecked="{Binding IsShowDifferenceChecked}" />
          <RadioButton
            Margin="5"
            Command="{Binding ShowDifferenceCommand}"
            Content="仅文本差异"
            IsChecked="{Binding Path=DifferenceType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static models:DifferenceType.OnlyText}}" />
          <RadioButton
            Margin="5"
            Command="{Binding ShowDifferenceCommand}"
            Content="文本与时间差异"
            IsChecked="{Binding Path=DifferenceType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static models:DifferenceType.TimeAndText}}" />
        </StackPanel>
      </Grid>
    </GroupBox>
    <StackPanel
      Grid.Row="2"
      Margin="8,5"
      FlowDirection="RightToLeft"
      Orientation="Horizontal">
      <Button
        x:Name="ButtonOverwritePpt"
        Command="{Binding OverwritePptCommand}"
        CommandParameter="{Binding ElementName=ExportWindow}"
        Content="覆盖PPT" />
      <Button
        x:Name="ButtonUpdateWordDocument"
        Margin="10,0"
        Command="{Binding UpdateWordDocumentCommand}"
        CommandParameter="{Binding ElementName=ExportWindow}"
        Content="修改Word" />
      <Button
        Command="{Binding CancelCommand}"
        CommandParameter="{Binding ElementName=ExportWindow}"
        Content="取消" />
    </StackPanel>
  </Grid>
</Window>
